// <auto-generated />
using System;
using Evaluacion.Connect;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Evaluacion.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Evaluacion.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacion");

                    b.HasKey("Id")
                        .HasName("PK_Categoria");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Evaluacion.Models.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("accion");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("producto_id");

                    b.Property<string>("ValorAnterior")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("valor_anterior");

                    b.Property<string>("ValorNuevo")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("valor_nuevo");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.HasKey("Id")
                        .HasName("PK_historico");

                    b.HasIndex("ProductoId")
                        .HasDatabaseName("fk_historico_producto");

                    b.ToTable("historico");
                });

            modelBuilder.Entity("Evaluacion.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacion");

                    b.HasKey("Id")
                        .HasName("PK_Marca");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("Evaluacion.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_barras");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("marca_id");

                    b.Property<string>("Medidas")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("medidas");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("precio");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("proveedor_id");

                    b.Property<decimal>("Stock")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("stock");

                    b.HasKey("Id")
                        .HasName("PK_Producto");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("fk_producto_categoria");

                    b.HasIndex("MarcaId")
                        .HasDatabaseName("fk_producto_marca");

                    b.HasIndex("ProveedorId")
                        .HasDatabaseName("fk_producto_proveedor");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("Evaluacion.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<string>("Identificacion")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacion");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tipo_identificacion");

                    b.HasKey("Id")
                        .HasName("PK_Proveedor");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("Evaluacion.Models.Historico", b =>
                {
                    b.HasOne("Evaluacion.Models.Producto", "Producto")
                        .WithMany("Historicos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("fk_historico_producto")
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Evaluacion.Models.Producto", b =>
                {
                    b.HasOne("Evaluacion.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("fk_producto_Categoria")
                        .IsRequired();

                    b.HasOne("Evaluacion.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .HasConstraintName("fk_producto_Marca")
                        .IsRequired();

                    b.HasOne("Evaluacion.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId")
                        .HasConstraintName("fk_producto_proveedor")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Evaluacion.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Evaluacion.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Evaluacion.Models.Producto", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Evaluacion.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
